{"name": "KAFKA: После отправки в Kafka сообщения с пользователем в БД создается запись с пользователем", "status": "broken", "statusDetails": {"message": "pydantic_core._pydantic_core.ValidationError: 6 validation errors for ServerConfig\nfrontend_url\n  Field required [type=missing, input_value={'browser_name': 'chrome'}, input_type=dict]\n    For further information visit https://errors.pydantic.dev/2.11/v/missing\ngateway_url\n  Field required [type=missing, input_value={'browser_name': 'chrome'}, input_type=dict]\n    For further information visit https://errors.pydantic.dev/2.11/v/missing\nauth_url\n  Field required [type=missing, input_value={'browser_name': 'chrome'}, input_type=dict]\n    For further information visit https://errors.pydantic.dev/2.11/v/missing\nspend_db_url\n  Field required [type=missing, input_value={'browser_name': 'chrome'}, input_type=dict]\n    For further information visit https://errors.pydantic.dev/2.11/v/missing\nuserdata_db_url\n  Field required [type=missing, input_value={'browser_name': 'chrome'}, input_type=dict]\n    For further information visit https://errors.pydantic.dev/2.11/v/missing\nkafka_address\n  Field required [type=missing, input_value={'browser_name': 'chrome'}, input_type=dict]\n    For further information visit https://errors.pydantic.dev/2.11/v/missing", "trace": "request = <SubRequest 'server_cfg' for <Function test_message_should_be_produced_to_kafka_after_successful_registration>>\n\n    @pytest.fixture(scope=\"session\")\n    def server_cfg(request: FixtureRequest) -> ServerConfig:\n>       return ServerConfig(\n            browser_name=request.config.getoption('--browser'),\n            _env_file=\".env\"\n        )\n\nniffler_tests_python/tests/conftest.py:74: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n__pydantic_self__ = ServerConfig(), _case_sensitive = None, _nested_model_default_partial_update = None, _env_prefix = None, _env_file = '.env'\n_env_file_encoding = None, _env_ignore_empty = None, _env_nested_delimiter = None, _env_nested_max_split = None, _env_parse_none_str = None\n_env_parse_enums = None, _cli_prog_name = None, _cli_parse_args = None, _cli_settings_source = None, _cli_parse_none_str = None\n_cli_hide_none_type = None, _cli_avoid_json = None, _cli_enforce_required = None, _cli_use_class_docs_for_groups = None, _cli_exit_on_error = None\n_cli_prefix = None, _cli_flag_prefix_char = None, _cli_implicit_flags = None, _cli_ignore_unknown_args = None, _cli_kebab_case = None\n_cli_shortcuts = None, _secrets_dir = None, values = {'browser_name': 'chrome'}\n\n    def __init__(\n        __pydantic_self__,\n        _case_sensitive: bool | None = None,\n        _nested_model_default_partial_update: bool | None = None,\n        _env_prefix: str | None = None,\n        _env_file: DotenvType | None = ENV_FILE_SENTINEL,\n        _env_file_encoding: str | None = None,\n        _env_ignore_empty: bool | None = None,\n        _env_nested_delimiter: str | None = None,\n        _env_nested_max_split: int | None = None,\n        _env_parse_none_str: str | None = None,\n        _env_parse_enums: bool | None = None,\n        _cli_prog_name: str | None = None,\n        _cli_parse_args: bool | list[str] | tuple[str, ...] | None = None,\n        _cli_settings_source: CliSettingsSource[Any] | None = None,\n        _cli_parse_none_str: str | None = None,\n        _cli_hide_none_type: bool | None = None,\n        _cli_avoid_json: bool | None = None,\n        _cli_enforce_required: bool | None = None,\n        _cli_use_class_docs_for_groups: bool | None = None,\n        _cli_exit_on_error: bool | None = None,\n        _cli_prefix: str | None = None,\n        _cli_flag_prefix_char: str | None = None,\n        _cli_implicit_flags: bool | None = None,\n        _cli_ignore_unknown_args: bool | None = None,\n        _cli_kebab_case: bool | None = None,\n        _cli_shortcuts: Mapping[str, str | list[str]] | None = None,\n        _secrets_dir: PathType | None = None,\n        **values: Any,\n    ) -> None:\n>       super().__init__(\n            **__pydantic_self__._settings_build_values(\n                values,\n                _case_sensitive=_case_sensitive,\n                _nested_model_default_partial_update=_nested_model_default_partial_update,\n                _env_prefix=_env_prefix,\n                _env_file=_env_file,\n                _env_file_encoding=_env_file_encoding,\n                _env_ignore_empty=_env_ignore_empty,\n                _env_nested_delimiter=_env_nested_delimiter,\n                _env_nested_max_split=_env_nested_max_split,\n                _env_parse_none_str=_env_parse_none_str,\n                _env_parse_enums=_env_parse_enums,\n                _cli_prog_name=_cli_prog_name,\n                _cli_parse_args=_cli_parse_args,\n                _cli_settings_source=_cli_settings_source,\n                _cli_parse_none_str=_cli_parse_none_str,\n                _cli_hide_none_type=_cli_hide_none_type,\n                _cli_avoid_json=_cli_avoid_json,\n                _cli_enforce_required=_cli_enforce_required,\n                _cli_use_class_docs_for_groups=_cli_use_class_docs_for_groups,\n                _cli_exit_on_error=_cli_exit_on_error,\n                _cli_prefix=_cli_prefix,\n                _cli_flag_prefix_char=_cli_flag_prefix_char,\n                _cli_implicit_flags=_cli_implicit_flags,\n                _cli_ignore_unknown_args=_cli_ignore_unknown_args,\n                _cli_kebab_case=_cli_kebab_case,\n                _cli_shortcuts=_cli_shortcuts,\n                _secrets_dir=_secrets_dir,\n            )\n        )\nE       pydantic_core._pydantic_core.ValidationError: 6 validation errors for ServerConfig\nE       frontend_url\nE         Field required [type=missing, input_value={'browser_name': 'chrome'}, input_type=dict]\nE           For further information visit https://errors.pydantic.dev/2.11/v/missing\nE       gateway_url\nE         Field required [type=missing, input_value={'browser_name': 'chrome'}, input_type=dict]\nE           For further information visit https://errors.pydantic.dev/2.11/v/missing\nE       auth_url\nE         Field required [type=missing, input_value={'browser_name': 'chrome'}, input_type=dict]\nE           For further information visit https://errors.pydantic.dev/2.11/v/missing\nE       spend_db_url\nE         Field required [type=missing, input_value={'browser_name': 'chrome'}, input_type=dict]\nE           For further information visit https://errors.pydantic.dev/2.11/v/missing\nE       userdata_db_url\nE         Field required [type=missing, input_value={'browser_name': 'chrome'}, input_type=dict]\nE           For further information visit https://errors.pydantic.dev/2.11/v/missing\nE       kafka_address\nE         Field required [type=missing, input_value={'browser_name': 'chrome'}, input_type=dict]\nE           For further information visit https://errors.pydantic.dev/2.11/v/missing\n\nniffler_tests_python/.venv/lib/python3.12/site-packages/pydantic_settings/main.py:188: ValidationError"}, "start": 1757498123497, "stop": 1757498123497, "uuid": "6a9a5ca4-362d-4413-8e6a-b9a96a6b0ad9", "historyId": "c62a23b401ce58c8630a331565b0c616", "testCaseId": "c62a23b401ce58c8630a331565b0c616", "fullName": "tests.kafka.test_kafka.TestAuthRegistrationKafkaTest#test_user_registration_message_should_be_consumed_by_kafka", "labels": [{"name": "suite", "value": "[KAFKA][niffler-auth]: Паблишинг сообщений в кафку"}, {"name": "tag", "value": "KAFKA"}, {"name": "as_id", "value": "600002"}, {"name": "epic", "value": "[KAFKA][niffler-auth]: Паблишинг сообщений в кафку"}, {"name": "parentSuite", "value": "tests.kafka"}, {"name": "subSuite", "value": "TestAuthRegistrationKafkaTest"}, {"name": "host", "value": "MacBook-Pro-Dara.local"}, {"name": "thread", "value": "35716-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.kafka.test_kafka"}], "titlePath": ["tests", "kafka", "test_kafka.py", "TestAuthRegistrationKafkaTest"]}